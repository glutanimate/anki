diff --git a/node_modules/protobufjs/cli/util.js b/node_modules/protobufjs/cli/util.js
index ffce1ed..c87a4b4 100644
--- a/node_modules/protobufjs/cli/util.js
+++ b/node_modules/protobufjs/cli/util.js
@@ -133,6 +133,7 @@ function modInstall(install) {
 }
 
 exports.setup = function() {
+    return;
     var pkg = require(path.join(__dirname, "..", "package.json"));
     var version = pkg.dependencies["semver"] || pkg.devDependencies["semver"];
     if (!modExists("semver", version)) {
diff --git a/node_modules/protobufjs/src/field.js b/node_modules/protobufjs/src/field.js
index 20c1cd2..3a1395f 100644
--- a/node_modules/protobufjs/src/field.js
+++ b/node_modules/protobufjs/src/field.js
@@ -270,6 +270,8 @@ Field.prototype.resolve = function resolve() {
             this.typeDefault = null;
         else // instanceof Enum
             this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined
+    } else if (this.options && this.options.proto3_optional) {
+        this.typeDefault = null;
     }
 
     // use explicitly set default value if present
diff --git a/node_modules/protobufjs/src/root.js b/node_modules/protobufjs/src/root.js
index df6f11f..112f9e8 100644
--- a/node_modules/protobufjs/src/root.js
+++ b/node_modules/protobufjs/src/root.js
@@ -259,7 +259,7 @@ Root.prototype.resolveAll = function resolveAll() {
 };
 
 // only uppercased (and thus conflict-free) children are exposed, see below
-var exposeRe = /^[A-Z]/;
+var exposeRe = /^[A-Za-z]/;
 
 /**
  * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.
diff --git a/node_modules/protobufjs/src/util/minimal.js b/node_modules/protobufjs/src/util/minimal.js
index 3c406de..91e079b 100644
--- a/node_modules/protobufjs/src/util/minimal.js
+++ b/node_modules/protobufjs/src/util/minimal.js
@@ -177,10 +177,7 @@ util.Array = typeof Uint8Array !== "undefined" ? Uint8Array /* istanbul ignore n
  * Long.js's Long class if available.
  * @type {Constructor<Long>}
  */
-util.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long
-         || /* istanbul ignore next */ util.global.Long
-         || util.inquire("long");
-
+util.Long = null;
 /**
  * Regular expression used to verify 2 bit (`bool`) map keys.
  * @type {RegExp}
